c
!logged_in
!logged_in?
c
exit
current_user
if session[:id]
User.find_by_id(session[:id])
session[:id]
@current_user
c
exit
ex
c
@question_vote.where(question_id:1, upvote: true).count - @question_vote.where(question_id:1, downvote: true).count
c
customer_path
license.id
licensce.id
license
@license
c
i.question_id
User.all
@user
p i
c
exit
params
AnswerVote.find_by(user_id: session[:id], answer_id: params[:answer_id]).nil?
c
question_vote.downvote
question_vote.upvote
c
exit
@question_vote
@question_vote.where(question_id: , upvote: true).count
c
exit
QuestionVote.count(question_id: u.id, upvote: true)
QuestionVote.where(question_id: u.id, upvote: true)
QuestionVote.count(:conditions => "question_id = u.id AND upvote = true")
QuestionVote.count('id', :conditions => "question_id = u.id AND upvote = true")
QuestionVote.count(:conditions => "question_id = u.id AND upvote = true")
QuestionVote.count(:all, :conditions => "question_id = u.id AND upvote = true")
QuestionVote.all
QuestionVote
Vote
u.count(:all, :conditions => "question_id = u.id AND upvote = true", :include => :question_votes)
u.count(:all, conditions: question_id = u.id AND upvote = true, :include => :question_votes)
u.id
u.question
u.question_id
p u
c
exit
QuestionVote.find_by(user_id: session[:id], question_id: params[:question_id], upvote:true).nil?
QuestionVote.find_by(user_id: session[:id], question_id: params[:question_id], upvote:true)
params[:question_id]
params
question_id
session[:id]
exit
session[:id]
session_id[:id]
@current_user
Question.find(1).question_votes
Question.find(1).question_vote
Question.find(1)
params
p u
Question.question_votes
Question.question_vote
question.question_vote
question.votes
Question.all
params
redirect "/signup_page"
exit
params
exit
params
exit
p u
c
exit
u.question_votes
u.question_vote
u.votes
p u
u.vote
c
exit
u.vote
u.votes
p u
exit
u.vote
u.votes
u.user
@question
@question.user_id
@question.user
@question.users
@question.user
@question.user_id
@question
@votes
exit
@votes
exit
@votes
u.user
u.votes
u.question
exit
c
p u
u.question
u
@question
c
params
exit
c
exit
logged_in?
exit
c
exit
p i
i.user_id
p i
User.all
User
c
session[:id]
session
logged_in?
current_user
@current_user
logged_in?
c
i.question_id
session[:id]
c
i.answer
i
i.question_id
@question.find(8).question
@question.find(8)
p i
i
@answer
@user.id
@question.keys
@question[7]
@question.id
@question.question
@question
c
@user.id
@answer
Answer.all
Answer.user_ids
Answer.user_id
Answer.all
Answer
@answer.user_id
@answer.ids
@answer.id
@answer
@user.id
@user
c
u
@question
c
@user.id
u.user_id
c
@user
c
@user
@answer
@question
asd
c
session[:id]
@user
c
exit
@user
exit
c
i.user_id
session[:id]
c
@answer
c
@answer
exit
Question.find_by(id: params[:id])
params
c
Question.all
@question
Question
Questions.all
@questions
id
:id
exit
User.find_by(id: session[:id]).fullname
User.find_by(id: session[:id])
User.all
User
session[:id]
@user
user
c
User.find_by(id: session[:id]).fullname
User.find_by(id: session[:id])
User.find_by(id: session[:id]
session[:id]
session
@user.ids
@user.id
@user
user
c
exit
params
c
question
c
session[:id]
params
user_id
question
c
p i
i.user_id
User.find_by(id: i.user_id).fullname
c
@current_user
User.id
User
user
u
exit
answer
exit
params
c
p i
